//
// Contains all common person-related gRPC service methods and responses.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: common/person.proto

package personv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for checking existence of a person.
type DoesPersonExistRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the person.
	PersonId      string `protobuf:"bytes,1,opt,name=personId,proto3" json:"personId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoesPersonExistRequest) Reset() {
	*x = DoesPersonExistRequest{}
	mi := &file_common_person_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoesPersonExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoesPersonExistRequest) ProtoMessage() {}

func (x *DoesPersonExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_person_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoesPersonExistRequest.ProtoReflect.Descriptor instead.
func (*DoesPersonExistRequest) Descriptor() ([]byte, []int) {
	return file_common_person_proto_rawDescGZIP(), []int{0}
}

func (x *DoesPersonExistRequest) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

// Response message for checking existence of a person.
type DoesPersonExistResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates whether the person exists.
	Exists        bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoesPersonExistResponse) Reset() {
	*x = DoesPersonExistResponse{}
	mi := &file_common_person_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoesPersonExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoesPersonExistResponse) ProtoMessage() {}

func (x *DoesPersonExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_person_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoesPersonExistResponse.ProtoReflect.Descriptor instead.
func (*DoesPersonExistResponse) Descriptor() ([]byte, []int) {
	return file_common_person_proto_rawDescGZIP(), []int{1}
}

func (x *DoesPersonExistResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

// Request message for retrieving a person by ID.
type GetPersonByIdRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the person.
	PersonId      string `protobuf:"bytes,1,opt,name=personId,proto3" json:"personId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPersonByIdRequest) Reset() {
	*x = GetPersonByIdRequest{}
	mi := &file_common_person_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByIdRequest) ProtoMessage() {}

func (x *GetPersonByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_person_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByIdRequest.ProtoReflect.Descriptor instead.
func (*GetPersonByIdRequest) Descriptor() ([]byte, []int) {
	return file_common_person_proto_rawDescGZIP(), []int{2}
}

func (x *GetPersonByIdRequest) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

// Response message containing details of a person.
type GetPersonByIdResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The unique identifier of the person.
	PersonId string `protobuf:"bytes,1,opt,name=personId,proto3" json:"personId,omitempty"`
	// The first name of the person.
	FirstName string `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	// The last name of the person.
	LastName string `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	// The date of birth of the person (ISO format recommended).
	DateOfBirth string `protobuf:"bytes,4,opt,name=dateOfBirth,proto3" json:"dateOfBirth,omitempty"`
	// The phone number of the person.
	PhoneNumber string `protobuf:"bytes,5,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	// The email address of the person.
	Email         string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPersonByIdResponse) Reset() {
	*x = GetPersonByIdResponse{}
	mi := &file_common_person_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPersonByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPersonByIdResponse) ProtoMessage() {}

func (x *GetPersonByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_person_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPersonByIdResponse.ProtoReflect.Descriptor instead.
func (*GetPersonByIdResponse) Descriptor() ([]byte, []int) {
	return file_common_person_proto_rawDescGZIP(), []int{3}
}

func (x *GetPersonByIdResponse) GetPersonId() string {
	if x != nil {
		return x.PersonId
	}
	return ""
}

func (x *GetPersonByIdResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetPersonByIdResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *GetPersonByIdResponse) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *GetPersonByIdResponse) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *GetPersonByIdResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_common_person_proto protoreflect.FileDescriptor

const file_common_person_proto_rawDesc = "" +
	"\n" +
	"\x13common/person.proto\x12\tperson.V1\"4\n" +
	"\x16DoesPersonExistRequest\x12\x1a\n" +
	"\bpersonId\x18\x01 \x01(\tR\bpersonId\"1\n" +
	"\x17DoesPersonExistResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\"2\n" +
	"\x14GetPersonByIdRequest\x12\x1a\n" +
	"\bpersonId\x18\x01 \x01(\tR\bpersonId\"\xc7\x01\n" +
	"\x15GetPersonByIdResponse\x12\x1a\n" +
	"\bpersonId\x18\x01 \x01(\tR\bpersonId\x12\x1c\n" +
	"\tfirstName\x18\x02 \x01(\tR\tfirstName\x12\x1a\n" +
	"\blastName\x18\x03 \x01(\tR\blastName\x12 \n" +
	"\vdateOfBirth\x18\x04 \x01(\tR\vdateOfBirth\x12 \n" +
	"\vphoneNumber\x18\x05 \x01(\tR\vphoneNumber\x12\x14\n" +
	"\x05email\x18\x06 \x01(\tR\x05email2\xbd\x01\n" +
	"\rPersonService\x12X\n" +
	"\x0fDoesPersonExist\x12!.person.V1.DoesPersonExistRequest\x1a\".person.V1.DoesPersonExistResponse\x12R\n" +
	"\rGetPersonById\x12\x1f.person.V1.GetPersonByIdRequest\x1a .person.V1.GetPersonByIdResponseB]Z[github.com/UmbrellaCrow612/PoliceCaseManagement/src/people/People.API/gen/personv1;personv1b\x06proto3"

var (
	file_common_person_proto_rawDescOnce sync.Once
	file_common_person_proto_rawDescData []byte
)

func file_common_person_proto_rawDescGZIP() []byte {
	file_common_person_proto_rawDescOnce.Do(func() {
		file_common_person_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_person_proto_rawDesc), len(file_common_person_proto_rawDesc)))
	})
	return file_common_person_proto_rawDescData
}

var file_common_person_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_common_person_proto_goTypes = []any{
	(*DoesPersonExistRequest)(nil),  // 0: person.V1.DoesPersonExistRequest
	(*DoesPersonExistResponse)(nil), // 1: person.V1.DoesPersonExistResponse
	(*GetPersonByIdRequest)(nil),    // 2: person.V1.GetPersonByIdRequest
	(*GetPersonByIdResponse)(nil),   // 3: person.V1.GetPersonByIdResponse
}
var file_common_person_proto_depIdxs = []int32{
	0, // 0: person.V1.PersonService.DoesPersonExist:input_type -> person.V1.DoesPersonExistRequest
	2, // 1: person.V1.PersonService.GetPersonById:input_type -> person.V1.GetPersonByIdRequest
	1, // 2: person.V1.PersonService.DoesPersonExist:output_type -> person.V1.DoesPersonExistResponse
	3, // 3: person.V1.PersonService.GetPersonById:output_type -> person.V1.GetPersonByIdResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_person_proto_init() }
func file_common_person_proto_init() {
	if File_common_person_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_person_proto_rawDesc), len(file_common_person_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_common_person_proto_goTypes,
		DependencyIndexes: file_common_person_proto_depIdxs,
		MessageInfos:      file_common_person_proto_msgTypes,
	}.Build()
	File_common_person_proto = out.File
	file_common_person_proto_goTypes = nil
	file_common_person_proto_depIdxs = nil
}
