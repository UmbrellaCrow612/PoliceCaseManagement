// <auto-generated />
using System;
using CAPTCHA.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CAPTCHA.Infrastructure.Migrations
{
    [DbContext(typeof(CAPTCHAApplicationDbContext))]
    [Migration("20250107175727_New")]
    partial class New
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("CAPTCHA.Core.Models.CAPTCHAAudioQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AnswerInPlainText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Attempts")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("SuccessfulAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CAPTCHAAudioQuestions");
                });

            modelBuilder.Entity("CAPTCHA.Core.Models.CAPTCHAGridChild", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CAPTCHAGridParentQuestionId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueInPlainText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CAPTCHAGridParentQuestionId");

                    b.ToTable("CAPTCHAGridChildren");
                });

            modelBuilder.Entity("CAPTCHA.Core.Models.CAPTCHAGridParentQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UsedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueInPlainText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CAPTCHAGridParentQuestions");
                });

            modelBuilder.Entity("CAPTCHA.Core.Models.CAPTCHAMathQuestion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double>("Answer")
                        .HasColumnType("REAL");

                    b.Property<int>("Attempts")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("IPAddress")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("SuccessfulAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserAgent")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CAPTCHAMathQuestions");
                });

            modelBuilder.Entity("CAPTCHA.Core.Models.CAPTCHAGridChild", b =>
                {
                    b.HasOne("CAPTCHA.Core.Models.CAPTCHAGridParentQuestion", "Question")
                        .WithMany("Children")
                        .HasForeignKey("CAPTCHAGridParentQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CAPTCHA.Core.Models.CAPTCHAGridParentQuestion", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
