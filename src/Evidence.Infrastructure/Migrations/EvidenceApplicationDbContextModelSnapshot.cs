// <auto-generated />
using System;
using Evidence.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Evidence.Infrastructure.Migrations
{
    [DbContext(typeof(EvidenceApplicationDbContext))]
    partial class EvidenceApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.CrimeScene", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateReported")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CrimeScenes");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.CustodyLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("EvidenceItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransferredAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransferredFromName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TransferredToName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EvidenceItemId");

                    b.ToTable("CustodyLogs");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.EvidenceItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("BiohazardStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CollecationLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CollectedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CollectedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeletedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DispositionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DispositionMethod")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HazmatStatus")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastEditedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastEditedById")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhysicalDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StorageLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StorageRequirements")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Evidences");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Joins.CrimeSceneEvidence", b =>
                {
                    b.Property<string>("CrimeSceneId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EvidenceItemId")
                        .HasColumnType("TEXT");

                    b.HasKey("CrimeSceneId", "EvidenceItemId");

                    b.HasIndex("EvidenceItemId");

                    b.ToTable("CrimeSceneEvidences");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Joins.CrimeScenePhoto", b =>
                {
                    b.Property<string>("CrimeSceneId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoId")
                        .HasColumnType("TEXT");

                    b.HasKey("CrimeSceneId", "PhotoId");

                    b.HasIndex("PhotoId");

                    b.ToTable("CrimeScenePhotos");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.LabResult", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Conclusions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EvidenceItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Findings")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TestDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TestName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TestedBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EvidenceItemId");

                    b.ToTable("LabResults");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Note", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EvidenceItemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EvidenceItemId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Photo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EvidenceItemId")
                        .HasColumnType("TEXT");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("TakenBy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EvidenceItemId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.CustodyLog", b =>
                {
                    b.HasOne("Evidence.Infrastructure.Data.Models.EvidenceItem", "Evidence")
                        .WithMany("CustodyLogs")
                        .HasForeignKey("EvidenceItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evidence");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Joins.CrimeSceneEvidence", b =>
                {
                    b.HasOne("Evidence.Infrastructure.Data.Models.CrimeScene", "CrimeScene")
                        .WithMany("CrimeSceneEvidences")
                        .HasForeignKey("CrimeSceneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evidence.Infrastructure.Data.Models.EvidenceItem", "EvidenceItem")
                        .WithMany("CrimeSceneEvidences")
                        .HasForeignKey("EvidenceItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrimeScene");

                    b.Navigation("EvidenceItem");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Joins.CrimeScenePhoto", b =>
                {
                    b.HasOne("Evidence.Infrastructure.Data.Models.CrimeScene", "CrimeScene")
                        .WithMany("CrimeScenePhotos")
                        .HasForeignKey("CrimeSceneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evidence.Infrastructure.Data.Models.Photo", "Photo")
                        .WithMany("CrimeScenePhotos")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrimeScene");

                    b.Navigation("Photo");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.LabResult", b =>
                {
                    b.HasOne("Evidence.Infrastructure.Data.Models.EvidenceItem", "Evidence")
                        .WithMany("LabResults")
                        .HasForeignKey("EvidenceItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evidence");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Note", b =>
                {
                    b.HasOne("Evidence.Infrastructure.Data.Models.EvidenceItem", "Evidence")
                        .WithMany("Notes")
                        .HasForeignKey("EvidenceItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evidence");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Photo", b =>
                {
                    b.HasOne("Evidence.Infrastructure.Data.Models.EvidenceItem", null)
                        .WithMany("Photos")
                        .HasForeignKey("EvidenceItemId");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.CrimeScene", b =>
                {
                    b.Navigation("CrimeSceneEvidences");

                    b.Navigation("CrimeScenePhotos");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.EvidenceItem", b =>
                {
                    b.Navigation("CrimeSceneEvidences");

                    b.Navigation("CustodyLogs");

                    b.Navigation("LabResults");

                    b.Navigation("Notes");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Evidence.Infrastructure.Data.Models.Photo", b =>
                {
                    b.Navigation("CrimeScenePhotos");
                });
#pragma warning restore 612, 618
        }
    }
}
