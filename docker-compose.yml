services:
  # web_ui:
  #   container_name: web_ui
  #   build:
  #     context: ./src/web-client
  #     dockerfile: Dockerfile
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - identity.api
  #     - cases.api
  #     - broker

  broker:
    image: rabbitmq:3-management
    container_name: message_broker
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: StrongPassword!

  # cases.api:
  #   image: ${DOCKER_REGISTRY-}casesapi
  #   build:
  #     context: .
  #     dockerfile: src/cases/Cases.API/Dockerfile
  #   depends_on:
  #     - cases_cache
  #     - cases_db
  #     - broker
  #   ports:
  #     - "8080:8080"

  cases_cache:
    image: redis:7.2
    container_name: cases_cache
    command: ["redis-server", "--requirepass", "mysecretpassword"]
    ports:
      - "6380:6379"

  cases_db:
    image: postgres:15
    container_name: cases_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: your_strong_password_here
      POSTGRES_DB: casesdb
    ports:
      - "5432:5432"
    volumes:
      - cases_db_data:/var/lib/postgresql/data

  # identity.api:
  #   image: ${DOCKER_REGISTRY-}identityapi
  #   build:
  #     context: .
  #     dockerfile: src/identity/Identity.API/Dockerfile
  #   depends_on:
  #     - identity_db
  #     - identity_cache
  #     - broker
  #   ports:
  #     - "8082:8080"

  identity_cache:
    image: redis:7.2
    container_name: identity_cache
    command: ["redis-server", "--requirepass", "mysecretpassword"]
    ports:
      - "6381:6379"

  identity_db:
    image: postgres:15
    container_name: identity_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: your_strong_password_here
      POSTGRES_DB: identitydb
    ports:
      - "5433:5432"
    volumes:
      - identity_db_data:/var/lib/postgresql/data

  # proxy:
  #   image: ${DOCKER_REGISTRY-}proxy
  #   build:
  #     context: .
  #     dockerfile: src/proxy/Dockerfile
  #   ports:
  #   - "8000:80"

  evidence_cache:
    image: redis:7.2
    container_name: evidence_cache
    command: ["redis-server", "--requirepass", "mysecretpassword"]
    ports:
      - "6382:6379"

  evidence_db:
    image: postgres:15
    container_name: evidence_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: your_strong_password_here
      POSTGRES_DB: evidencedb
    ports:
      - "5434:5432"
    volumes:
      - evidence_db_data:/var/lib/postgresql/data

  people_db:
    image: postgres:15
    container_name: people_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: your_strong_password_here
      POSTGRES_DB: peopledb
    ports:
      - "5435:5432"
    volumes:
      - people_db_data:/var/lib/postgresql/data

  people_api:
    build:
      context: ./src/people/People.API
      dockerfile: Dockerfile
    container_name: people_api
    depends_on:
      - people_db
      - broker
    ports:
      - "8083:7001"
      - "8084:50051"

  email_worker:
    container_name: email_worker
    build:
      context: .src/email/Email.Worker
      dockerfile: Dockerfile
    depends_on:
    - broker

volumes:
  identity_db_data: {}
  cases_db_data: {}
  evidence_db_data: {}
  people_db_data: {}
